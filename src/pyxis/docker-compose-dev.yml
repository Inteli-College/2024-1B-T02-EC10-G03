services:
    zookeeper:
        image: confluentinc/cp-zookeeper
        hostname: zookeeper
        container_name: zookeeper
        healthcheck:
            test: nc -z localhost 2181 || exit -1
            interval: 10s
            timeout: 5s
            retries: 3
        ports:
            - '2181:2181'
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    broker:
        image: confluentinc/cp-kafka
        hostname: broker
        container_name: broker
        depends_on:
            - zookeeper
        healthcheck:
            test: kafka-topics --bootstrap-server broker:29092 --list
            interval: 30s
            timeout: 10s
            retries: 3
        ports:
            - '29092:29092'
            - '9092:9092'
            - '9101:9101'
        environment:
            KAFKA_BROKER_ID: 2
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_JMX_PORT: 9101
            KAFKA_JMX_HOSTNAME: localhost

    app:
        build:
            context: .
            dockerfile: Dockerfile.base
        volumes:
            - .:/app
        depends_on:
            broker:
                condition: service_healthy
        environment:
            BOOTSTRAP_SERVER: broker:29092
            CLIENT_ID: python-producer
            TOPIC: test-topic
        command: pymon -c src/main.py
